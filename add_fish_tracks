# load libraries
library(stringr)
library(raster)
library(dplyr)
library(sp)
library(tidyr)
library(reader)
library(readr)
library(sf)
library(maptools)
# micah's functions
source("/Users/ScyphersLab/Desktop/micahs_functions.R")
# ------------
# pulling the date and notes - wendi
columns = c("date","header","notes")
empty_df = data.frame(matrix(nrow = 0, ncol = length(columns)))
colnames(empty_df)=columns
files <- list.files(path="/Users/ScyphersLab/Desktop/mini_fish_files",
                    pattern="*.txt", full.names=TRUE, recursive=FALSE)
for (text_file in files) {
  # Open connection and close on exit
  zzz <- file(text_file, open = "rt")
  date <- as.character(n.readLines(fn=text_file , n = 1, skip = 1))
  notes<- as.character(n.readLines(fn=text_file , n = 1, skip = 2))
  header <- as.character(n.readLines(fn=text_file , n = 1, skip = 0))
  close(zzz)
  # Read remaining lines into data frame
  d <- read.table(text_file,
                  sep = "\t",header = FALSE, skip = 3, encoding ="UTF-8")
  d$date <- date
  d$header <- header
  d$notes <- notes
  df_list <- cbind(d$date,d$header,d$notes)
  df_list <- data.frame(df_list)
  df_list <- df_list%>%
    rename(date=X1,
           header=X2,
           notes=X3)
  empty_df <- rbind(empty_df, df_list)
}
#-----
# here I would put in a loop to do this for every file in the folder and then
# combine into one big data file
# reads in the individual file of trawl coord points
files <- list.files(path="/Users/ScyphersLab/Desktop/mini_fish_files",
                    pattern="*.txt", full.names=TRUE, recursive=FALSE)
columns <- c("Lat","long")
trak_cols <- c("track")
df_total <- data.frame()
final_trak_df <- data.frame(matrix(nrow = 0, ncol = length(trak_cols)))
for (file in files){
  # Extracts TRAK and track number
  trak <- regmatches(file, regexpr("TRAK\\d+", file))
  if (length(trak) > 0) {
    trak <- gsub("\\D", "", trak)
  }
  # reads
  df = read.table(file, sep = "\t",header = FALSE, skip = 1, encoding ="latin1")
  # creates three columns separating the info
  df <- separate(df, col = V1, into = c("Latitude", "Longitude", "Color"),
                 sep = "\\s+")
  # creates a final plot of only the lat and the long for each file
  df_plot <- df[-2:-1,-3]
  # this gets rid of the degree sign
  df_plot$Latitude <- gsub("°", " ", df_plot$Latitude)
  df_plot$Longitude <- gsub("°", " ", df_plot$Longitude)
  # function to convert degrees, minutes, and seconds to decimal degrees
  f <- function(x) as.double(substr(x, 1, 2)) + as.double(substring(x, 3)) / 60
  # apply the conversion function to the data frame columns using sapply
  df_plot$Latitude_decimal <- sapply(df_plot$Latitude, f)
  df_plot$Longitude_decimal <- sapply(df_plot$Longitude, f)
  # pull only the converted decimal cols into a new data frame
  df_plot_decimals <- df_plot[c(3,4)]
  # converts the longitude into negative numbers
  df_plot_decimals$Longitude_decimal <- -df_plot_decimals$Longitude_decimal
  # creates a list of trak number n times based on the len of df_plot_decimals
  trak_list <- rep(list(trak),length(df_plot_decimals$Latitude_decimal))
  # converts list into a data frame of track number
  trak_df<- data.frame(matrix(unlist(trak_list),
                              nrow=length(trak_list), byrow=TRUE))
  # changes name of column in trak_df
  colnames(trak_df) <- ('Track Number')
  df_total <- rbind(df_total,df_plot_decimals)
  final_trak_df <- rbind(final_trak_df, trak_df)
}
fish_tracks_df <-cbind(df_total,final_trak_df)
fish_tracks_df <- data.frame(fish_tracks_df[-1,])
# converts data frame into the same coordinate ref system as the footprint maps
help_me = function(data,
                    src.proj = CRS("+init=epsg:4326"),
                    dst.proj = CRS("+init=epsg:26986")) {
  require(sp)
  as.data.frame(
    spTransform(
      SpatialPointsDataFrame(
        coords = data.frame(xmasp <- fish_tracks_df$Longitude,
                            ymasp<- fish_tracks_df$Latitude_decimal),
        data = data.frame(id = fish_tracks_df$Track.Number,
                          Xlon = fish_tracks_df$Longitude_decimal,
                          Ylat = fish_tracks_df$Latitude_decimal),
        proj4string = src.proj), dst.proj))
}
final <- help_me(data = fish_tracks_df)
# reorder the data frame to be in long/lat/track format
fish_tracks_df<- (final[,c(4,5,1)])
# renames the data frame columns
names(fish_tracks_df)[1] <- "Longitude_decimal"
names(fish_tracks_df)[2] <- "Latitude_decimal"
names(fish_tracks_df)[3] <- "Track.Number"
# make it a numeric
fish_tracks_df$Longitude_decimal = as.numeric(fish_tracks_df$Longitude_decimal)
# split the data by track numbers and create lines from the XY points
lfc = do.call(st_sfc,
              lapply(split(fish_tracks_df,fish_tracks_df$Track.Number),
                     function(d){st_linestring(as.matrix(d[,1:2]))}))
# create a feature from that and the IDs are the unique track numbers
lfd = st_sf(data.frame(ID=unique(fish_tracks_df$Track.Number), geom=lfc))
# create a shape file from that feature (the folder should be empty any
# time this code is run)
st_write(lfd, "/Users/ScyphersLab/Desktop/shapes/my_shapefile_test.shp",
         driver = "ESRI Shapefile")
# read in the shape file I just created
fish_track_test<- shapefile('/Users/ScyphersLab/Desktop/shapes/my_shapefile_test.shp')
# plot the tracks
plot(fish_track_test)
